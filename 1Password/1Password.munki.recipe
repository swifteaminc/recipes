<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>Description</key>
  <string>Downloads the latest 1Password zip, finds the app, builds a pkg, and imports into Munki.</string>
  <key>Identifier</key>
  <string>com.github.swifteaminc.recipes.munki.1Password</string>

  <key>Input</key>
  <dict>
    <key>MUNKI_REPO_SUBDIR</key>
    <string>apps/%NAME%</string>
    <key>NAME</key>
    <string>1Password</string>
    <key>pkginfo</key>
    <dict>
      <key>blocking_applications</key>
      <array>
        <string>1Password Browser Helper.app</string>
        <string>1Password Helper (Renderer).app</string>
        <string>1Password Helper (GPU).app</string>
        <string>1Password Launcher.app</string>
        <string>1Password Helper (Plugin).app</string>
        <string>1Password Updater.app</string>
        <string>1Password.app</string>
        <string>1Password Helper.app</string>
      </array>
      <key>catalogs</key>
      <array>
        <string>Password Manager</string>
      </array>
      <key>description</key>
      <string>The world’s most-loved password manager

1Password is the easiest way to store and use strong passwords. Log in to sites and fill forms securely with a single click.</string>
      <key>developer</key>
      <string>AgileBits Inc.</string>
      <key>display_name</key>
      <string>1Password</string>
      <key>name</key>
      <string>%NAME%</string>
      <key>unattended_install</key>
      <true/>
      <key>unattended_uninstall</key>
      <true/>
    </dict>
  </dict>

  <key>MinimumVersion</key>
  <string>1.1.0</string>

  <key>ParentRecipe</key>
  <string>com.github.swifteaminc.recipes.download.1Password</string>

  <key>Process</key>
  <array>
    <!-- Build a pkg from the found app -->
    <dict>
      <key>Arguments</key>
      <dict>
        <key>app_path</key>
        <string>%found_filename%</string>
      </dict>
      <key>Processor</key>
      <string>AppPkgCreator</string>
    </dict>

    <!-- Optional: installs items for Munki -->
    <dict>
      <key>Arguments</key>
      <dict>
        <key>faux_root</key>
        <string>%RECIPE_CACHE_DIR%/unarchived</string>
        <key>installs_item_paths</key>
        <array>
          <!-- If the zip yields “1Password Installer.app”, this path will match the pkg we build -->
          <string>/Applications/%found_basename%</string>
        </array>
      </dict>
      <key>Processor</key>
      <string>MunkiInstallsItemsCreator</string>
    </dict>

    <!-- Merge base pkginfo -->
    <dict>
      <key>Processor</key>
      <string>MunkiPkginfoMerger</string>
    </dict>

    <!-- Read minimum OS version from the found app and inject -->
    <dict>
      <key>Arguments</key>
      <dict>
        <key>info_path</key>
        <string>%found_filename%/Contents/Info.plist</string>
        <key>plist_keys</key>
        <dict>
          <key>LSMinimumSystemVersion</key>
          <string>min_os_ver</string>
        </dict>
      </dict>
      <key>Processor</key>
      <string>PlistReader</string>
    </dict>

    <dict>
      <key>Arguments</key>
      <dict>
        <key>additional_pkginfo</key>
        <dict>
          <key>minimum_os_version</key>
          <string>%min_os_ver%</string>
        </dict>
      </dict>
      <key>Processor</key>
      <string>MunkiPkginfoMerger</string>
    </dict>

    <!-- Import into Munki -->
    <dict>
      <key>Arguments</key>
      <dict>
        <key>pkg_path</key>
        <string>%pkg_path%</string>
        <key>repo_subdirectory</key>
        <string>%MUNKI_REPO_SUBDIR%</string>
      </dict>
      <key>Processor</key>
      <string>MunkiImporter</string>
    </dict>

    <!-- Clean up -->
    <dict>
      <key>Arguments</key>
      <dict>
        <key>path_list</key>
        <array>
          <string>%RECIPE_CACHE_DIR%/unarchived</string>
        </array>
      </dict>
      <key>Processor</key>
      <string>PathDeleter</string>
    </dict>
  </array>
</dict>
</plist>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0\">
<dict>
    <key>Description</key>
    <string>Downloads the latest version of Workbrew</string>
    <key>Identifier</key>
    <string>com.github.swifteaminc.recipes.munki.Workbrew</string>
    <key>Input</key>
    <dict>
        <key>MUNKI_REPO_SUBDIR</key>
        <string>apps</string>
        <key>NAME</key>
        <string>Workbrew</string>
        <key>pkginfo</key>
        <dict>
            <key>catalogs</key>
            <array>
                <string>Productivity</string>
                <string>Workflow Tools</string>
            </array>
            <key>display_name</key>
            <string>Workbrew</string>
            <key>category</key>
            <string>Productivity</string>
            <key>developer</key>
            <string>Workbrew</string>
            <key>description</key>
            <string>Workbrew, What if you had perfect memory. Requires Xcode Command Line Tools; a popup will automatically appear prompting you to install them</string>
            <key>name</key>
            <string>%NAME%</string>
            <key>unattended_install</key>
            <true/>
            <key>installcheck_script</key>
            <string>#!/bin/bash
#
# Munki installcheck for Workbrew only check that /opt/workbrew/bin/brew exists
#

if [ -x "/opt/workbrew/bin/brew" ]; then
    exit 1
else
    exit 0
fi
            </string>
            <key>preinstall_script</key>
            <string>#!/bin/bash

CTL_PATH="/Library/Developer/CommandLineTools"
if [ -d "$CTL_PATH" ]; then
    echo "Command Line Tools already installed."
    exit 0
fi

echo "Command Line Tools not found. Installing..."

CLT_PLACEHOLDER="/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"
touch "$CLT_PLACEHOLDER"

CLT_PACKAGE=$(softwareupdate -l | grep -B 1 "Command Line Tools" | \
              awk -F'*' '/^ *\*/ {print $2}' | \
              sed -e 's/^ *Label: //' -e 's/^ *//' | \
              sort -V | tail -n1)

softwareupdate -i "$CLT_PACKAGE" --verbose
rm -f "$CLT_PLACEHOLDER"

exit 0
            </string>
            <key>postinstall_script</key>
            <string>#!/bin/bash

USER_HOME=$(eval echo ~${USER:-$SUDO_USER})

# Path setup: ensure /opt/workbrew/bin is prioritized
PROFILE_FILES=(".zprofile" ".zshrc" ".bash_profile" ".bashrc")

for file in "${PROFILE_FILES[@]}"; do
    TARGET="$USER_HOME/$file"
    if [ -f "$TARGET" ]; then
        grep -q '/opt/workbrew/bin' "$TARGET" || echo 'export PATH="/opt/workbrew/bin:$PATH"' >> "$TARGET"
        grep -q 'HOMEBREW_BREW_WRAPPER' "$TARGET" || echo 'export HOMEBREW_BREW_WRAPPER="/opt/workbrew/bin/brew"' >> "$TARGET"
    else
        echo 'export PATH="/opt/workbrew/bin:$PATH"' >> "$TARGET"
        echo 'export HOMEBREW_BREW_WRAPPER="/opt/workbrew/bin/brew"' >> "$TARGET"
    fi
done

# Optional: apply brew shellenv if brew is available
if [ -x "/opt/workbrew/bin/brew" ]; then
    BREW_ENV=$(/opt/workbrew/bin/brew shellenv)
    for file in "${PROFILE_FILES[@]}"; do
        TARGET="$USER_HOME/$file"
        echo "$BREW_ENV" >> "$TARGET"
    done
fi

exit 0
            </string>
        </dict>
    </dict>
    <key>MinimumVersion</key>
    <string>0.0.1</string>
    <key>ParentRecipe</key>
    <string>com.github.swifteaminc.recipes.download.Workbrew</string>
    <key>Process</key>
    <array>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>pkg_path</key>
                <string>%pathname%</string>
                <key>repo_subdirectory</key>
                <string>%MUNKI_REPO_SUBDIR%</string>
            </dict>
            <key>Processor</key>
            <string>MunkiImporter</string>
        </dict>
    </array>
</dict>
</plist>
